version: "3.8"

services:

  discoveryservice:
    image: docker.io/tranquanghuyiy09/onlineshoppingapplication:online-shopping-application-discoveryservice
    ports:
      - "8761:8761"
     
  mysqldb:
    image: mysql:latest
    ports:
      - "3307:3306"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: sapassword
    volumes:
      - mysql_data:/var/lib/mysql
   

  employeeservice:
    image: docker.io/tranquanghuyiy09/onlineshoppingapplication:online-shopping-application-employeeservice
    ports:
      - "8085:8085"
    environment:
      - spring.datasource.url=jdbc:mysql://mysqldb:3306/SA-EmployeeService?createDatabaseIfNotExist=true
      - spring.cloud.discovery.enabled=true
      - eureka.client.service-url.defaultZone=http://discoveryservice:8761/eureka
      - eureka.client.instance.hostname=discoveryservice
      - auth.service.url=http://authservice:8181/api/v1/auth/validate-token?token=
    depends_on:
      - discoveryservice
      - mysqldb
    restart: always

  customerservice:
    image: docker.io/tranquanghuyiy09/onlineshoppingapplication:online-shopping-application-customerservice
    ports:
      - "8086:8086"
    environment:
      - spring.datasource.url=jdbc:mysql://mysqldb:3306/SA-CustomerService?createDatabaseIfNotExist=true
      - spring.cloud.discovery.enabled=true
      - eureka.client.service-url.defaultZone=http://discoveryservice:8761/eureka
      - eureka.client.instance.hostname=discoveryservice
      - auth.service.url=http://authservice:8181/api/v1/auth/validate-token?token=
    depends_on:
      - discoveryservice
      - mysqldb
    restart: always

  authservice:
    image: docker.io/tranquanghuyiy09/onlineshoppingapplication:online-shopping-application-authservice
    ports:
      - "8181:8181"
    environment:
      - spring.datasource.url=jdbc:mysql://mysqldb:3306/SA-AuthService?createDatabaseIfNotExist=true
      - spring.cloud.discovery.enabled=true
      - eureka.client.service-url.defaultZone=http://discoveryservice:8761/eureka
      - eureka.client.instance.hostname=discoveryservice
      - employee.service.url=http://employeeservice:8085/api/v1/employees/register
      - customer.service.url=http://customerservice:8086/api/v1/customers/register
    depends_on:
      - discoveryservice
      - mysqldb
      - employeeservice
      - customerservice
        
    restart: always

  productservice:
    image: docker.io/tranquanghuyiy09/onlineshoppingapplication:online-shopping-application-productservice
    ports:
      - "8087:8087"
    environment:
      - spring.datasource.url=jdbc:mysql://mysqldb:3306/SA-ProductService?createDatabaseIfNotExist=true
      - spring.cloud.discovery.enabled=true
      - eureka.client.service-url.defaultZone=http://discoveryservice:8761/eureka
      - eureka.client.instance.hostname=discoveryservice
      - auth.service.url=http://authservice:8181/api/v1/auth/validate-token?token=
      - inventory.service.url=http://inventoryservice:8082/api/v1/inventories/create
    depends_on:
      - discoveryservice
      - mysqldb
      - authservice
    restart: always

  orderservice:
    image: docker.io/tranquanghuyiy09/onlineshoppingapplication:online-shopping-application-orderservice
    ports:
      - "8081:8081"
    environment:
      - spring.datasource.url=jdbc:mysql://mysqldb:3306/SA-OrderService?createDatabaseIfNotExist=true
      - spring.cloud.discovery.enabled=true
      - eureka.client.service-url.defaultZone=http://discoveryservice:8761/eureka
      - eureka.client.instance.hostname=discoveryservice
      - auth.service.url=http://authservice:8181/api/v1/auth/validate-token?token=
      - inventory.service.url=http://inventoryservice:8082
      - product.service.url=http://productservice:8087/api/v1/products/
    depends_on:
      - discoveryservice
      - mysqldb
      - authservice
      - inventoryservice
    restart: always

  inventoryservice:
    image: docker.io/tranquanghuyiy09/onlineshoppingapplication:online-shopping-application-inventoryservice
    ports:
      - "8082:8082"
    environment:
      - spring.datasource.url=jdbc:mysql://mysqldb:3306/SA-InventoryService?createDatabaseIfNotExist=true
      - spring.cloud.discovery.enabled=true
      - eureka.client.service-url.defaultZone=http://discoveryservice:8761/eureka
      - eureka.client.instance.hostname=discoveryservice
      - auth.service.url=http://authservice:8181/api/v1/auth/validate-token?token=
    depends_on:
      - discoveryservice
      - mysqldb
      - authservice
    restart: always
    
  apigateway:
    image: docker.io/tranquanghuyiy09/onlineshoppingapplication:online-shopping-application-apigateway
    ports:
      - "80:8080"
    environment:
      - spring.cloud.discovery.enabled=true
      - eureka.client.service-url.defaultZone=http://discoveryservice:8761/eureka
      - eureka.client.instance.hostname=discoveryservice
      - service.auth.uri=http://authservice:8181
      - service.product.uri=http://productservice:8087
      - service.employee.uri=http://employeeservice:8085
      - service.customer.uri=http://customerservice:8086
      - service.order.uri=http://orderservice:8081
      - service.inventory.uri=http://inventoryservice:8082
    depends_on:
      - discoveryservice
      - mysqldb
      - employeeservice
      - customerservice
      - authservice
      - productservice
      - orderservice
      - inventoryservice
    restart: always   


volumes:
  mysql_data:
