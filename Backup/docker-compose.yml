version: '3.9'
services:
  ## MySQL Docker Compose Config
  mysql-auth:
    container_name: mysql-auth
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: sapassword
      MYSQL_DATABASE: SA-AuthService
    expose:
      - "3306"
    ports:
      - "3307:3306"
    restart: always
    networks:
      - database-net
      
  mysql-customer:
    container_name: mysql-customer
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: sapassword
      MYSQL_DATABASE: SA-CustomerService
    expose:
      - "3306"
    ports:
      - "3308:3306"
    restart: always
    networks:
      - database-net
      
  mysql-employee:
    container_name: mysql-employee
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: sapassword
      MYSQL_DATABASE: SA-EmployeeService
    expose:
      - "3306"
    ports:
      - "3309:3306"
    restart: always
    networks:
      - database-net

  ## Config Server
  config-server:
    build: ./ConfigServer
    container_name: config-server
    ports:
      - "9999:9999"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    restart: always

  ## Discovery Server
  discovery-server:
    build: ./DiscoveryService
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - config-server
    restart: always
      
  ## Employee Service Docker Compose Config
  employee-service:
    build: ./EmployeeService
    container_name: employee-service
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=sapassword
      - SPRING_DATASOURCE_URL=jdbc:mysql://employee-auth:3306/SA-EmployeeService?createDatabaseIfNotExist=true
    depends_on:
      - mysql-employee
      - discovery-server
      
  ## Customer Service Docker Compose Config
  customer-service:
    build: ./CustomerService
    container_name: customer-service
    ports:
      - "8086:8086"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=sapassword
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-customer:3306/SA-CustomerService?createDatabaseIfNotExist=true
    depends_on:
      - mysql-customer
      - discovery-server
      
  ## Auth Service Docker Compose Config
  auth-service:
    build: ./AuthService
    container_name: auth-service
    ports:
      - "8181:8181"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=sapassword
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-auth:3306/SA-AuthService?createDatabaseIfNotExist=true
      - EMPLOYEE_SERVICE_URL=http://employee-service:8085/api/v1/employees/register
      - CUSTOMER_SERVICE_URL=http://customer-service:8086/api/v1/customers/register
    depends_on:
      - mysql-auth
      - discovery-server
      - customer-service
      - employee-service

  adminer:
    image: adminer
    container_name: cadminer
    restart: always
    ports:
      - "8123:8080"
    networks:
      - database-net

networks:
  database-net:
